extensions:
    health_check:

receivers:
    otlp:
        protocols:
            grpc: 
                endpoint: "0.0.0.0:4317"
            http: 
                endpoint: "0.0.0.0:55680"

processors:
    memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30        
    batch:
    attributes:
        actions:
            - key:  region
              value:  west           
              action:  insert
    ## https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/tailsamplingprocessor/README.md
    # Excluding health checks from traces
    tail_sampling:
        decision_wait: 10s
        expected_new_traces_per_sec: 10
        policies:
            - name: string_attribute_policy
              type: string_attribute
              string_attribute:
                  key: http.route
                  values:
                      - ^\/healthz$
                  enabled_regex_matching: true
                  invert_match: true

exporters:
    debug:
    otlp/jaeger:
        endpoint: "${JAEGER_ENDPOINT}"
        tls:
            insecure: true
    prometheus:
        endpoint: "0.0.0.0:8889"
    loki:
        endpoint: http://loki:3100/loki/api/v1/push
        tls:
            insecure: true

service:
    pipelines:
        traces:
            receivers:
                - otlp
            processors: [ memory_limiter, attributes, tail_sampling, batch ]
            exporters:
                - debug
                - otlp/jaeger
        metrics:
            receivers:
                - otlp
            processors: [ memory_limiter, batch ]
            exporters:
                - debug
                - prometheus
        logs:
            receivers:
                - otlp
            processors: []
            exporters:
                - loki
                - debug
                
    
    extensions:
        - health_check